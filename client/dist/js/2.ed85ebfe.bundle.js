(window.webpackJsonp=window.webpackJsonp||[]).push([[2,17],{105:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var antd_es_button_style_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(241);\n/* harmony import */ var antd_es_button__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(242);\n/* harmony import */ var antd_es_input_style_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(248);\n/* harmony import */ var antd_es_input__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(254);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(0);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var ahooks__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(333);\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(253);\n/* harmony import */ var _index_less__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(235);\n/* harmony import */ var _index_less__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_index_less__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var three_examples_jsm_controls_OrbitControls__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(274);\n/* harmony import */ var _grpc_api_point_cloud_grpc_web_pb_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(245);\n/* harmony import */ var _grpc_api_point_cloud_grpc_web_pb_js__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(_grpc_api_point_cloud_grpc_web_pb_js__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var _grpc_api_point_cloud_pb_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(243);\n/* harmony import */ var _grpc_api_point_cloud_pb_js__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(_grpc_api_point_cloud_pb_js__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var _utils_GrpcStream__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(251);\n/* harmony import */ var three_examples_jsm_loaders_PCDLoader_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(275);\n/* harmony import */ var dat_gui__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(324);\n/* harmony import */ var three_examples_jsm_libs_stats_module_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(325);\n/* harmony import */ var _utils_get_grpc_url_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(244);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst ThreePointCloud = () => {\n  const viewNode = Object(react__WEBPACK_IMPORTED_MODULE_4__["useRef"])(null);\n  const state = Object(ahooks__WEBPACK_IMPORTED_MODULE_5__[/* default */ "a"])({\n    scene: null,\n    camera: null,\n    renderer: null,\n    controls: null,\n    pointCloudMaterial: null,\n    material: null,\n    points: null,\n    positions: [],\n    geometry: null,\n    stats: null,\n    guiControls: {\n      showPointCloud: true,\n      size: 0.005,\n      color: 0xffffff,\n      opacity: 0.7,\n      transparent: true,\n      autoRotate: false\n    }\n  });\n  Object(react__WEBPACK_IMPORTED_MODULE_4__["useEffect"])(() => {\n    initThreeScene();\n    animation();\n    window.addEventListener(\'resize\', onWindowResize);\n    return () => {\n      cancelAnimationFrame(state.animationId);\n      window.removeEventListener(\'resize\', onWindowResize);\n    };\n  }, []);\n  const initThreeScene = () => {\n    // Create a scene\n    state.renderer = new three__WEBPACK_IMPORTED_MODULE_6__[/* WebGLRenderer */ "y"]({\n      antialias: true\n    });\n    state.renderer.setPixelRatio(window.devicePixelRatio);\n    state.renderer.setSize(window.innerWidth, window.innerHeight);\n    viewNode.current.appendChild(state.renderer.domElement);\n    state.stats = new three_examples_jsm_libs_stats_module_js__WEBPACK_IMPORTED_MODULE_14__[/* default */ "a"]();\n    state.stats.dom.style.position = \'absolute\'; // 设置元素的位置\n    viewNode.current.appendChild(state.stats.dom);\n    state.scene = new three__WEBPACK_IMPORTED_MODULE_6__[/* Scene */ "t"]();\n    state.scene.background = new three__WEBPACK_IMPORTED_MODULE_6__[/* Color */ "c"](0x050505);\n    state.scene.fog = new three__WEBPACK_IMPORTED_MODULE_6__[/* Fog */ "h"](0x050505, 2000, 3500);\n    state.camera = new three__WEBPACK_IMPORTED_MODULE_6__[/* PerspectiveCamera */ "m"](30, window.innerWidth / window.innerHeight, 0.01, 40);\n    state.camera.position.set(0, 0, 1);\n    state.scene.add(state.camera);\n    state.controls = new three_examples_jsm_controls_OrbitControls__WEBPACK_IMPORTED_MODULE_8__[/* OrbitControls */ "a"](state.camera, state.renderer.domElement);\n    // state.controls.addEventListener(\'change\', () => render()) // use if there is no animation loop\n    state.controls.minDistance = 0.5;\n    state.controls.maxDistance = 10;\n    setupLights();\n    addControls();\n  };\n  const animation = () => {\n    state.animationId = requestAnimationFrame(animation);\n    state.stats.update();\n    // Update your scene here\n    render();\n  };\n  const addControls = () => {\n    state.geometry = new three__WEBPACK_IMPORTED_MODULE_6__[/* BufferGeometry */ "b"]();\n    state.material = new three__WEBPACK_IMPORTED_MODULE_6__[/* PointsMaterial */ "q"](state.guiControls);\n    const gui = new dat_gui__WEBPACK_IMPORTED_MODULE_13__[/* GUI */ "a"]();\n    const box = gui.addFolder(\'Points\');\n    // box.add(state.points.material, \'x\', 0, 3).name(\'Width\').listen();\n    // box.add(state.points.material, \'y\', 0, 3).name(\'Height\').listen();\n    // box.add(state.points.material, \'z\', 0, 3).name(\'Length\').listen();\n    // box.add(state.points.material, \'wireframe\').listen();\n    box.add(state.guiControls, \'showPointCloud\').name(\'显示点云\').onChange(value => {\n      if (state.points) state.points.visible = value;\n    });\n    const other = gui.addFolder(\'Other\');\n    other.add(state.guiControls, \'size\', 0.001, 0.01).name(\'颗粒度\').onChange(value => {\n      if (state.points) {\n        state.points.material.size = value;\n      }\n    });\n    other.add(state.guiControls, \'opacity\', 0, 1).name(\'透明度\').onChange(value => {\n      if (state.points) {\n        state.points.material.opacity = value;\n      }\n    });\n    other.addColor(state.guiControls, \'color\').name(\'颜色\').onChange(value => {\n      if (state.points) {\n        state.points.material.color.set(value);\n      }\n    });\n    other.add(state.guiControls, \'autoRotate\').name(\'自动旋转\').onChange(value => {\n      state.points.autoRotate = value;\n      render();\n    });\n    const guiDomElement = gui.domElement;\n    console.log(guiDomElement, \'guiDomElement\');\n    viewNode.current.appendChild(guiDomElement);\n    // 设置gui的位置\n    guiDomElement.style.position = \'absolute\';\n    guiDomElement.style.top = \'10px\';\n    guiDomElement.style.right = \'10px\';\n    // gui.add(state.material, \'size\', 0.001, 0.01).onChange(() => render())\n    // gui.add(state.material, \'sizeAttenuation\').onChange(() => render())\n    // gui.add(state.material, \'depthTest\').onChange(() => render())\n    // gui.add(state.material, \'depthWrite\').onChange(() => render())\n    // gui.add(state.material, \'vertexColors\').onChange(() => render())\n    box.open();\n    other.open();\n  };\n  const setupLights = () => {\n    state.scene.add(new three__WEBPACK_IMPORTED_MODULE_6__[/* AmbientLight */ "a"](0xffffff, 0.5));\n    const directionalLight = new three__WEBPACK_IMPORTED_MODULE_6__[/* DirectionalLight */ "d"](0xffffff, 1);\n    directionalLight.position.set(1, 5, 1);\n    state.scene.add(directionalLight);\n  };\n  const clearScene = () => {\n    for (const object of state.scene.children.slice()) {\n      if (object instanceof three__WEBPACK_IMPORTED_MODULE_6__[/* Points */ "p"]) {\n        state.scene.remove(object);\n      }\n    }\n    state.positions = [];\n    state.points = null;\n    render();\n  };\n  const startServerStream = event => {\n    console.log(\'event: \', event.target);\n    clearScene();\n    const file = event.target.files[0];\n    if (file) {\n      const loader = new three_examples_jsm_loaders_PCDLoader_js__WEBPACK_IMPORTED_MODULE_12__[/* PCDLoader */ "a"]();\n      loader.load(URL.createObjectURL(file), function (points) {\n        state.points = points;\n        state.points.geometry.center();\n        state.points.geometry.rotateX(Math.PI);\n        state.points.name = file.name;\n        state.scene.add(state.points);\n        render();\n      });\n    }\n  };\n  const render = () => {\n    if (state.points && state.points.autoRotate) {\n      state.points.rotation.x += 0.01;\n      state.points.rotation.y += 0.01;\n    }\n    state.renderer.render(state.scene, state.camera);\n  };\n  const handler = pointList => {\n    if (pointList != null) {\n      const newPositions = pointList.flatMap(p => [p.x, p.y, p.z]);\n      state.positions = [...state.positions, ...newPositions];\n      // Create BufferGeometry and add position attribute\n\n      state.geometry.setAttribute(\'position\', new three__WEBPACK_IMPORTED_MODULE_6__[/* Float32BufferAttribute */ "g"](state.positions, 3));\n      state.geometry.attributes.position.needsUpdate = true; // Tell BufferGeometry to update\n\n      if (!state.points) {\n        state.points = new three__WEBPACK_IMPORTED_MODULE_6__[/* Points */ "p"](state.geometry, state.material);\n        state.scene.add(state.points);\n      }\n\n      // Center the points and rotate\n      state.points.geometry.center();\n      state.points.rotation.x = Math.PI;\n      render();\n    }\n  };\n  function onWindowResize() {\n    state.camera.aspect = window.innerWidth / window.innerHeight;\n    state.camera.updateProjectionMatrix();\n    state.renderer.setSize(window.innerWidth, window.innerHeight);\n    render();\n  }\n  const sendUnary = async () => {\n    clearScene();\n    const request = new _grpc_api_point_cloud_pb_js__WEBPACK_IMPORTED_MODULE_10__["PointCloudRequest"]();\n    request.setFilename(\'Zaghetto.pcd\');\n    const stream = new _utils_GrpcStream__WEBPACK_IMPORTED_MODULE_11__[/* default */ "a"](Object(_utils_get_grpc_url_js__WEBPACK_IMPORTED_MODULE_15__[/* default */ "a"])());\n    stream.getStreamPointCloud(request, handler);\n  };\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_4___default.a.Fragment, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement("div", {\n    className: "app-wrap"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(antd_es_input__WEBPACK_IMPORTED_MODULE_3__[/* default */ "a"], {\n    type: "file",\n    id: "pcd-upload",\n    accept: ".pcd",\n    onChange: startServerStream,\n    style: {\n      width: \'200px\',\n      marginRight: \'60px\'\n    }\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(antd_es_button__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"], {\n    id: "clear-scene",\n    onClick: clearScene\n  }, "\\u6E05\\u9664\\u573A\\u666F"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(antd_es_button__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"], {\n    id: "getPoints-scene",\n    onClick: sendUnary\n  }, "\\u83B7\\u53D6grpc\\u70B9\\u4E91")), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement("div", {\n    className: "canvas"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement("div", {\n    ref: viewNode\n  })));\n};\n/* harmony default export */ __webpack_exports__["default"] = (ThreePointCloud);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///105\n')},235:function(module,exports,__webpack_require__){eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjM1LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL3ZpZXdzL3RocmVlUG9pbnRDbG91ZDIvaW5kZXgubGVzcz82NWU0Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpbiJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///235\n")},243:function(module,exports,__webpack_require__){eval("// source: point_cloud.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = __webpack_require__(250);\nvar goog = jspb;\nvar global = function () {\n  if (this) {\n    return this;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  return Function('return this')();\n}.call(null);\ngoog.exportSymbol('proto.pointcloud.Point', null, global);\ngoog.exportSymbol('proto.pointcloud.PointCloudRequest', null, global);\ngoog.exportSymbol('proto.pointcloud.PointCloudResponse', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.pointcloud.Point = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.pointcloud.Point, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.pointcloud.Point.displayName = 'proto.pointcloud.Point';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.pointcloud.PointCloudResponse = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.pointcloud.PointCloudResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.pointcloud.PointCloudResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.pointcloud.PointCloudResponse.displayName = 'proto.pointcloud.PointCloudResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.pointcloud.PointCloudRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.pointcloud.PointCloudRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.pointcloud.PointCloudRequest.displayName = 'proto.pointcloud.PointCloudRequest';\n}\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.pointcloud.Point.prototype.toObject = function (opt_includeInstance) {\n    return proto.pointcloud.Point.toObject(opt_includeInstance, this);\n  };\n\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.pointcloud.Point} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n  proto.pointcloud.Point.toObject = function (includeInstance, msg) {\n    var f,\n      obj = {\n        x: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),\n        y: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),\n        z: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0)\n      };\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.pointcloud.Point}\n */\nproto.pointcloud.Point.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.pointcloud.Point();\n  return proto.pointcloud.Point.deserializeBinaryFromReader(msg, reader);\n};\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.pointcloud.Point} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.pointcloud.Point}\n */\nproto.pointcloud.Point.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n      case 1:\n        var value = /** @type {number} */reader.readDouble();\n        msg.setX(value);\n        break;\n      case 2:\n        var value = /** @type {number} */reader.readDouble();\n        msg.setY(value);\n        break;\n      case 3:\n        var value = /** @type {number} */reader.readDouble();\n        msg.setZ(value);\n        break;\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n  return msg;\n};\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.pointcloud.Point.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.pointcloud.Point.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.pointcloud.Point} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.pointcloud.Point.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getX();\n  if (f !== 0.0) {\n    writer.writeDouble(1, f);\n  }\n  f = message.getY();\n  if (f !== 0.0) {\n    writer.writeDouble(2, f);\n  }\n  f = message.getZ();\n  if (f !== 0.0) {\n    writer.writeDouble(3, f);\n  }\n};\n\n/**\n * optional double x = 1;\n * @return {number}\n */\nproto.pointcloud.Point.prototype.getX = function () {\n  return /** @type {number} */jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0);\n};\n\n/**\n * @param {number} value\n * @return {!proto.pointcloud.Point} returns this\n */\nproto.pointcloud.Point.prototype.setX = function (value) {\n  return jspb.Message.setProto3FloatField(this, 1, value);\n};\n\n/**\n * optional double y = 2;\n * @return {number}\n */\nproto.pointcloud.Point.prototype.getY = function () {\n  return /** @type {number} */jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0);\n};\n\n/**\n * @param {number} value\n * @return {!proto.pointcloud.Point} returns this\n */\nproto.pointcloud.Point.prototype.setY = function (value) {\n  return jspb.Message.setProto3FloatField(this, 2, value);\n};\n\n/**\n * optional double z = 3;\n * @return {number}\n */\nproto.pointcloud.Point.prototype.getZ = function () {\n  return /** @type {number} */jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0);\n};\n\n/**\n * @param {number} value\n * @return {!proto.pointcloud.Point} returns this\n */\nproto.pointcloud.Point.prototype.setZ = function (value) {\n  return jspb.Message.setProto3FloatField(this, 3, value);\n};\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.pointcloud.PointCloudResponse.repeatedFields_ = [1];\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.pointcloud.PointCloudResponse.prototype.toObject = function (opt_includeInstance) {\n    return proto.pointcloud.PointCloudResponse.toObject(opt_includeInstance, this);\n  };\n\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.pointcloud.PointCloudResponse} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n  proto.pointcloud.PointCloudResponse.toObject = function (includeInstance, msg) {\n    var f,\n      obj = {\n        pointsList: jspb.Message.toObjectList(msg.getPointsList(), proto.pointcloud.Point.toObject, includeInstance)\n      };\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.pointcloud.PointCloudResponse}\n */\nproto.pointcloud.PointCloudResponse.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.pointcloud.PointCloudResponse();\n  return proto.pointcloud.PointCloudResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.pointcloud.PointCloudResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.pointcloud.PointCloudResponse}\n */\nproto.pointcloud.PointCloudResponse.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n      case 1:\n        var value = new proto.pointcloud.Point();\n        reader.readMessage(value, proto.pointcloud.Point.deserializeBinaryFromReader);\n        msg.addPoints(value);\n        break;\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n  return msg;\n};\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.pointcloud.PointCloudResponse.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.pointcloud.PointCloudResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.pointcloud.PointCloudResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.pointcloud.PointCloudResponse.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getPointsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(1, f, proto.pointcloud.Point.serializeBinaryToWriter);\n  }\n};\n\n/**\n * repeated Point points = 1;\n * @return {!Array<!proto.pointcloud.Point>}\n */\nproto.pointcloud.PointCloudResponse.prototype.getPointsList = function () {\n  return /** @type{!Array<!proto.pointcloud.Point>} */jspb.Message.getRepeatedWrapperField(this, proto.pointcloud.Point, 1);\n};\n\n/**\n * @param {!Array<!proto.pointcloud.Point>} value\n * @return {!proto.pointcloud.PointCloudResponse} returns this\n*/\nproto.pointcloud.PointCloudResponse.prototype.setPointsList = function (value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n/**\n * @param {!proto.pointcloud.Point=} opt_value\n * @param {number=} opt_index\n * @return {!proto.pointcloud.Point}\n */\nproto.pointcloud.PointCloudResponse.prototype.addPoints = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.pointcloud.Point, opt_index);\n};\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.pointcloud.PointCloudResponse} returns this\n */\nproto.pointcloud.PointCloudResponse.prototype.clearPointsList = function () {\n  return this.setPointsList([]);\n};\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.pointcloud.PointCloudRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.pointcloud.PointCloudRequest.toObject(opt_includeInstance, this);\n  };\n\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.pointcloud.PointCloudRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n  proto.pointcloud.PointCloudRequest.toObject = function (includeInstance, msg) {\n    var f,\n      obj = {\n        filename: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n      };\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.pointcloud.PointCloudRequest}\n */\nproto.pointcloud.PointCloudRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.pointcloud.PointCloudRequest();\n  return proto.pointcloud.PointCloudRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.pointcloud.PointCloudRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.pointcloud.PointCloudRequest}\n */\nproto.pointcloud.PointCloudRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n      case 1:\n        var value = /** @type {string} */reader.readString();\n        msg.setFilename(value);\n        break;\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n  return msg;\n};\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.pointcloud.PointCloudRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.pointcloud.PointCloudRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.pointcloud.PointCloudRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.pointcloud.PointCloudRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getFilename();\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n};\n\n/**\n * optional string filename = 1;\n * @return {string}\n */\nproto.pointcloud.PointCloudRequest.prototype.getFilename = function () {\n  return /** @type {string} */jspb.Message.getFieldWithDefault(this, 1, \"\");\n};\n\n/**\n * @param {string} value\n * @return {!proto.pointcloud.PointCloudRequest} returns this\n */\nproto.pointcloud.PointCloudRequest.prototype.setFilename = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\ngoog.object.extend(exports, proto.pointcloud);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///243\n")},244:function(module,__webpack_exports__,__webpack_require__){"use strict";eval("/*\n * @Description:\n * @Author: Devin\n * @Date: 2023-09-18 12:53:59\n */\nconst getGrpcUrl = () => {\n  return undefined || 'http://127.0.0.1:5001';\n};\n/* harmony default export */ __webpack_exports__[\"a\"] = (getGrpcUrl);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjQ0LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL3V0aWxzL2dldC1ncnBjLXVybC5qcz8wNWUwIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBARGVzY3JpcHRpb246XG4gKiBAQXV0aG9yOiBEZXZpblxuICogQERhdGU6IDIwMjMtMDktMTggMTI6NTM6NTlcbiAqL1xuY29uc3QgZ2V0R3JwY1VybCA9ICgpID0+IHtcbiAgcmV0dXJuIHByb2Nlc3MuZW52LlJFQUNUX0FQUF9HUlBDX1VSTCB8fCAnaHR0cDovLzEyNy4wLjAuMTo1MDAxJ1xufVxuXG5leHBvcnQgZGVmYXVsdCBnZXRHcnBjVXJsXG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///244\n")},245:function(module,exports,__webpack_require__){eval("/**\n * @fileoverview gRPC-Web generated client stub for pointcloud\n * @enhanceable\n * @public\n */\n\n// Code generated by protoc-gen-grpc-web. DO NOT EDIT.\n// versions:\n// \tprotoc-gen-grpc-web v1.5.0\n// \tprotoc              v3.19.1\n// source: point_cloud.proto\n\n/* eslint-disable */\n// @ts-nocheck\n\nconst grpc = {};\ngrpc.web = __webpack_require__(247);\nconst proto = {};\nproto.pointcloud = __webpack_require__(243);\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?grpc.web.ClientOptions} options\n * @constructor\n * @struct\n * @final\n */\nproto.pointcloud.PointCloudStreamServiceClient = function (hostname, credentials, options) {\n  if (!options) options = {};\n  options.format = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname.replace(/\\/+$/, '');\n};\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?grpc.web.ClientOptions} options\n * @constructor\n * @struct\n * @final\n */\nproto.pointcloud.PointCloudStreamServicePromiseClient = function (hostname, credentials, options) {\n  if (!options) options = {};\n  options.format = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname.replace(/\\/+$/, '');\n};\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.pointcloud.PointCloudRequest,\n *   !proto.pointcloud.Point>}\n */\nconst methodDescriptor_PointCloudStreamService_GetStreamPointCloud = new grpc.web.MethodDescriptor('/pointcloud.PointCloudStreamService/GetStreamPointCloud', grpc.web.MethodType.SERVER_STREAMING, proto.pointcloud.PointCloudRequest, proto.pointcloud.Point,\n/**\n * @param {!proto.pointcloud.PointCloudRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.pointcloud.Point.deserializeBinary);\n\n/**\n * @param {!proto.pointcloud.PointCloudRequest} request The request proto\n * @param {?Object<string, string>=} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.pointcloud.Point>}\n *     The XHR Node Readable Stream\n */\nproto.pointcloud.PointCloudStreamServiceClient.prototype.getStreamPointCloud = function (request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ + '/pointcloud.PointCloudStreamService/GetStreamPointCloud', request, metadata || {}, methodDescriptor_PointCloudStreamService_GetStreamPointCloud);\n};\n\n/**\n * @param {!proto.pointcloud.PointCloudRequest} request The request proto\n * @param {?Object<string, string>=} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.pointcloud.Point>}\n *     The XHR Node Readable Stream\n */\nproto.pointcloud.PointCloudStreamServicePromiseClient.prototype.getStreamPointCloud = function (request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ + '/pointcloud.PointCloudStreamService/GetStreamPointCloud', request, metadata || {}, methodDescriptor_PointCloudStreamService_GetStreamPointCloud);\n};\nmodule.exports = proto.pointcloud;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjQ1LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL2dycGMtYXBpL3BvaW50X2Nsb3VkX2dycGNfd2ViX3BiLmpzPzMyYWYiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAZmlsZW92ZXJ2aWV3IGdSUEMtV2ViIGdlbmVyYXRlZCBjbGllbnQgc3R1YiBmb3IgcG9pbnRjbG91ZFxuICogQGVuaGFuY2VhYmxlXG4gKiBAcHVibGljXG4gKi9cblxuLy8gQ29kZSBnZW5lcmF0ZWQgYnkgcHJvdG9jLWdlbi1ncnBjLXdlYi4gRE8gTk9UIEVESVQuXG4vLyB2ZXJzaW9uczpcbi8vIFx0cHJvdG9jLWdlbi1ncnBjLXdlYiB2MS41LjBcbi8vIFx0cHJvdG9jICAgICAgICAgICAgICB2My4xOS4xXG4vLyBzb3VyY2U6IHBvaW50X2Nsb3VkLnByb3RvXG5cblxuLyogZXNsaW50LWRpc2FibGUgKi9cbi8vIEB0cy1ub2NoZWNrXG5cblxuXG5jb25zdCBncnBjID0ge307XG5ncnBjLndlYiA9IHJlcXVpcmUoJ2dycGMtd2ViJyk7XG5cbmNvbnN0IHByb3RvID0ge307XG5wcm90by5wb2ludGNsb3VkID0gcmVxdWlyZSgnLi9wb2ludF9jbG91ZF9wYi5qcycpO1xuXG4vKipcbiAqIEBwYXJhbSB7c3RyaW5nfSBob3N0bmFtZVxuICogQHBhcmFtIHs/T2JqZWN0fSBjcmVkZW50aWFsc1xuICogQHBhcmFtIHs/Z3JwYy53ZWIuQ2xpZW50T3B0aW9uc30gb3B0aW9uc1xuICogQGNvbnN0cnVjdG9yXG4gKiBAc3RydWN0XG4gKiBAZmluYWxcbiAqL1xucHJvdG8ucG9pbnRjbG91ZC5Qb2ludENsb3VkU3RyZWFtU2VydmljZUNsaWVudCA9XG4gICAgZnVuY3Rpb24oaG9zdG5hbWUsIGNyZWRlbnRpYWxzLCBvcHRpb25zKSB7XG4gIGlmICghb3B0aW9ucykgb3B0aW9ucyA9IHt9O1xuICBvcHRpb25zLmZvcm1hdCA9ICd0ZXh0JztcblxuICAvKipcbiAgICogQHByaXZhdGUgQGNvbnN0IHshZ3JwYy53ZWIuR3JwY1dlYkNsaWVudEJhc2V9IFRoZSBjbGllbnRcbiAgICovXG4gIHRoaXMuY2xpZW50XyA9IG5ldyBncnBjLndlYi5HcnBjV2ViQ2xpZW50QmFzZShvcHRpb25zKTtcblxuICAvKipcbiAgICogQHByaXZhdGUgQGNvbnN0IHtzdHJpbmd9IFRoZSBob3N0bmFtZVxuICAgKi9cbiAgdGhpcy5ob3N0bmFtZV8gPSBob3N0bmFtZS5yZXBsYWNlKC9cXC8rJC8sICcnKTtcblxufTtcblxuXG4vKipcbiAqIEBwYXJhbSB7c3RyaW5nfSBob3N0bmFtZVxuICogQHBhcmFtIHs/T2JqZWN0fSBjcmVkZW50aWFsc1xuICogQHBhcmFtIHs/Z3JwYy53ZWIuQ2xpZW50T3B0aW9uc30gb3B0aW9uc1xuICogQGNvbnN0cnVjdG9yXG4gKiBAc3RydWN0XG4gKiBAZmluYWxcbiAqL1xucHJvdG8ucG9pbnRjbG91ZC5Qb2ludENsb3VkU3RyZWFtU2VydmljZVByb21pc2VDbGllbnQgPVxuICAgIGZ1bmN0aW9uKGhvc3RuYW1lLCBjcmVkZW50aWFscywgb3B0aW9ucykge1xuICBpZiAoIW9wdGlvbnMpIG9wdGlvbnMgPSB7fTtcbiAgb3B0aW9ucy5mb3JtYXQgPSAndGV4dCc7XG5cbiAgLyoqXG4gICAqIEBwcml2YXRlIEBjb25zdCB7IWdycGMud2ViLkdycGNXZWJDbGllbnRCYXNlfSBUaGUgY2xpZW50XG4gICAqL1xuICB0aGlzLmNsaWVudF8gPSBuZXcgZ3JwYy53ZWIuR3JwY1dlYkNsaWVudEJhc2Uob3B0aW9ucyk7XG5cbiAgLyoqXG4gICAqIEBwcml2YXRlIEBjb25zdCB7c3RyaW5nfSBUaGUgaG9zdG5hbWVcbiAgICovXG4gIHRoaXMuaG9zdG5hbWVfID0gaG9zdG5hbWUucmVwbGFjZSgvXFwvKyQvLCAnJyk7XG5cbn07XG5cblxuLyoqXG4gKiBAY29uc3RcbiAqIEB0eXBlIHshZ3JwYy53ZWIuTWV0aG9kRGVzY3JpcHRvcjxcbiAqICAgIXByb3RvLnBvaW50Y2xvdWQuUG9pbnRDbG91ZFJlcXVlc3QsXG4gKiAgICFwcm90by5wb2ludGNsb3VkLlBvaW50Pn1cbiAqL1xuY29uc3QgbWV0aG9kRGVzY3JpcHRvcl9Qb2ludENsb3VkU3RyZWFtU2VydmljZV9HZXRTdHJlYW1Qb2ludENsb3VkID0gbmV3IGdycGMud2ViLk1ldGhvZERlc2NyaXB0b3IoXG4gICcvcG9pbnRjbG91ZC5Qb2ludENsb3VkU3RyZWFtU2VydmljZS9HZXRTdHJlYW1Qb2ludENsb3VkJyxcbiAgZ3JwYy53ZWIuTWV0aG9kVHlwZS5TRVJWRVJfU1RSRUFNSU5HLFxuICBwcm90by5wb2ludGNsb3VkLlBvaW50Q2xvdWRSZXF1ZXN0LFxuICBwcm90by5wb2ludGNsb3VkLlBvaW50LFxuICAvKipcbiAgICogQHBhcmFtIHshcHJvdG8ucG9pbnRjbG91ZC5Qb2ludENsb3VkUmVxdWVzdH0gcmVxdWVzdFxuICAgKiBAcmV0dXJuIHshVWludDhBcnJheX1cbiAgICovXG4gIGZ1bmN0aW9uKHJlcXVlc3QpIHtcbiAgICByZXR1cm4gcmVxdWVzdC5zZXJpYWxpemVCaW5hcnkoKTtcbiAgfSxcbiAgcHJvdG8ucG9pbnRjbG91ZC5Qb2ludC5kZXNlcmlhbGl6ZUJpbmFyeVxuKTtcblxuXG4vKipcbiAqIEBwYXJhbSB7IXByb3RvLnBvaW50Y2xvdWQuUG9pbnRDbG91ZFJlcXVlc3R9IHJlcXVlc3QgVGhlIHJlcXVlc3QgcHJvdG9cbiAqIEBwYXJhbSB7P09iamVjdDxzdHJpbmcsIHN0cmluZz49fSBtZXRhZGF0YSBVc2VyIGRlZmluZWRcbiAqICAgICBjYWxsIG1ldGFkYXRhXG4gKiBAcmV0dXJuIHshZ3JwYy53ZWIuQ2xpZW50UmVhZGFibGVTdHJlYW08IXByb3RvLnBvaW50Y2xvdWQuUG9pbnQ+fVxuICogICAgIFRoZSBYSFIgTm9kZSBSZWFkYWJsZSBTdHJlYW1cbiAqL1xucHJvdG8ucG9pbnRjbG91ZC5Qb2ludENsb3VkU3RyZWFtU2VydmljZUNsaWVudC5wcm90b3R5cGUuZ2V0U3RyZWFtUG9pbnRDbG91ZCA9XG4gICAgZnVuY3Rpb24ocmVxdWVzdCwgbWV0YWRhdGEpIHtcbiAgcmV0dXJuIHRoaXMuY2xpZW50Xy5zZXJ2ZXJTdHJlYW1pbmcodGhpcy5ob3N0bmFtZV8gK1xuICAgICAgJy9wb2ludGNsb3VkLlBvaW50Q2xvdWRTdHJlYW1TZXJ2aWNlL0dldFN0cmVhbVBvaW50Q2xvdWQnLFxuICAgICAgcmVxdWVzdCxcbiAgICAgIG1ldGFkYXRhIHx8IHt9LFxuICAgICAgbWV0aG9kRGVzY3JpcHRvcl9Qb2ludENsb3VkU3RyZWFtU2VydmljZV9HZXRTdHJlYW1Qb2ludENsb3VkKTtcbn07XG5cblxuLyoqXG4gKiBAcGFyYW0geyFwcm90by5wb2ludGNsb3VkLlBvaW50Q2xvdWRSZXF1ZXN0fSByZXF1ZXN0IFRoZSByZXF1ZXN0IHByb3RvXG4gKiBAcGFyYW0gez9PYmplY3Q8c3RyaW5nLCBzdHJpbmc+PX0gbWV0YWRhdGEgVXNlciBkZWZpbmVkXG4gKiAgICAgY2FsbCBtZXRhZGF0YVxuICogQHJldHVybiB7IWdycGMud2ViLkNsaWVudFJlYWRhYmxlU3RyZWFtPCFwcm90by5wb2ludGNsb3VkLlBvaW50Pn1cbiAqICAgICBUaGUgWEhSIE5vZGUgUmVhZGFibGUgU3RyZWFtXG4gKi9cbnByb3RvLnBvaW50Y2xvdWQuUG9pbnRDbG91ZFN0cmVhbVNlcnZpY2VQcm9taXNlQ2xpZW50LnByb3RvdHlwZS5nZXRTdHJlYW1Qb2ludENsb3VkID1cbiAgICBmdW5jdGlvbihyZXF1ZXN0LCBtZXRhZGF0YSkge1xuICByZXR1cm4gdGhpcy5jbGllbnRfLnNlcnZlclN0cmVhbWluZyh0aGlzLmhvc3RuYW1lXyArXG4gICAgICAnL3BvaW50Y2xvdWQuUG9pbnRDbG91ZFN0cmVhbVNlcnZpY2UvR2V0U3RyZWFtUG9pbnRDbG91ZCcsXG4gICAgICByZXF1ZXN0LFxuICAgICAgbWV0YWRhdGEgfHwge30sXG4gICAgICBtZXRob2REZXNjcmlwdG9yX1BvaW50Q2xvdWRTdHJlYW1TZXJ2aWNlX0dldFN0cmVhbVBvaW50Q2xvdWQpO1xufTtcblxuXG5tb2R1bGUuZXhwb3J0cyA9IHByb3RvLnBvaW50Y2xvdWQ7XG5cbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBR0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFLQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBS0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUtBO0FBR0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///245\n")},251:function(module,__webpack_exports__,__webpack_require__){"use strict";eval("/* harmony import */ var _grpc_api_point_cloud_grpc_web_pb_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(245);\n/* harmony import */ var _grpc_api_point_cloud_grpc_web_pb_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_grpc_api_point_cloud_grpc_web_pb_js__WEBPACK_IMPORTED_MODULE_0__);\n\nclass GrpcStream {\n  constructor(endpoint) {\n    this.endpoint = endpoint;\n    this.buffer = [];\n  }\n  getStreamPointCloud(request, handler) {\n    const client = new _grpc_api_point_cloud_grpc_web_pb_js__WEBPACK_IMPORTED_MODULE_0__[\"PointCloudStreamServiceClient\"](this.endpoint, null, null);\n    const stream = client.getStreamPointCloud(request, {});\n    stream.on('data', response => {\n      const point = {\n        x: response.getX(),\n        y: response.getY(),\n        z: response.getZ()\n      };\n      this.buffer.push(point);\n\n      // 如果缓冲区达到一定数量，更新状态并清空缓冲区\n      if (this.buffer.length >= 500) {\n        // 你可以根据实际情况调整这个值\n        handler(this.buffer);\n        this.buffer = [];\n      }\n    });\n    stream.on('error', error => {\n      console.error('Error:', error);\n    });\n    stream.on('end', () => {\n      console.log('Stream completed');\n      // 数据流结束时，更新状态并清空缓冲区\n      handler(this.buffer);\n      this.buffer = [];\n    });\n  }\n}\n/* harmony default export */ __webpack_exports__[\"a\"] = (GrpcStream);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjUxLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL3V0aWxzL0dycGNTdHJlYW0uanM/ZTNlYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQb2ludENsb3VkU3RyZWFtU2VydmljZUNsaWVudCB9IGZyb20gJ0AvZ3JwYy1hcGkvcG9pbnRfY2xvdWRfZ3JwY193ZWJfcGIuanMnXG5cbmNsYXNzIEdycGNTdHJlYW0ge1xuICBjb25zdHJ1Y3RvcihlbmRwb2ludCkge1xuICAgIHRoaXMuZW5kcG9pbnQgPSBlbmRwb2ludFxuICAgIHRoaXMuYnVmZmVyID0gW11cbiAgfVxuXG4gIGdldFN0cmVhbVBvaW50Q2xvdWQocmVxdWVzdCwgaGFuZGxlcikge1xuICAgIGNvbnN0IGNsaWVudCA9IG5ldyBQb2ludENsb3VkU3RyZWFtU2VydmljZUNsaWVudCh0aGlzLmVuZHBvaW50LCBudWxsLCBudWxsKVxuXG4gICAgY29uc3Qgc3RyZWFtID0gY2xpZW50LmdldFN0cmVhbVBvaW50Q2xvdWQocmVxdWVzdCwge30pXG5cbiAgICBzdHJlYW0ub24oJ2RhdGEnLCAocmVzcG9uc2UpID0+IHtcbiAgICAgIGNvbnN0IHBvaW50ID0ge1xuICAgICAgICB4OiByZXNwb25zZS5nZXRYKCksXG4gICAgICAgIHk6IHJlc3BvbnNlLmdldFkoKSxcbiAgICAgICAgejogcmVzcG9uc2UuZ2V0WigpLFxuICAgICAgfVxuICAgICAgdGhpcy5idWZmZXIucHVzaChwb2ludClcblxuICAgICAgLy8g5aaC5p6c57yT5Yay5Yy66L6+5Yiw5LiA5a6a5pWw6YeP77yM5pu05paw54q25oCB5bm25riF56m657yT5Yay5Yy6XG4gICAgICBpZiAodGhpcy5idWZmZXIubGVuZ3RoID49IDUwMCkge1xuICAgICAgICAvLyDkvaDlj6/ku6XmoLnmja7lrp7pmYXmg4XlhrXosIPmlbTov5nkuKrlgLxcbiAgICAgICAgaGFuZGxlcih0aGlzLmJ1ZmZlcilcbiAgICAgICAgdGhpcy5idWZmZXIgPSBbXVxuICAgICAgfVxuICAgIH0pXG5cbiAgICBzdHJlYW0ub24oJ2Vycm9yJywgKGVycm9yKSA9PiB7XG4gICAgICBjb25zb2xlLmVycm9yKCdFcnJvcjonLCBlcnJvcilcbiAgICB9KVxuXG4gICAgc3RyZWFtLm9uKCdlbmQnLCAoKSA9PiB7XG4gICAgICBjb25zb2xlLmxvZygnU3RyZWFtIGNvbXBsZXRlZCcpXG4gICAgICAvLyDmlbDmja7mtYHnu5PmnZ/ml7bvvIzmm7TmlrDnirbmgIHlubbmuIXnqbrnvJPlhrLljLpcbiAgICAgIGhhbmRsZXIodGhpcy5idWZmZXIpXG4gICAgICB0aGlzLmJ1ZmZlciA9IFtdXG4gICAgfSlcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBHcnBjU3RyZWFtXG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///251\n")}}]);